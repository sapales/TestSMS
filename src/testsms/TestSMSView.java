/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package testsms;

import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author m0072
 */
public class TestSMSView extends javax.swing.JFrame {

    ArrayList<EmailBean> eb = new ArrayList<EmailBean>();
    ArrayList<EnviarEmail> em = new ArrayList<EnviarEmail>();
    
    /**
     * Creates new form TestSMSView
     */
    public TestSMSView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtbtnActivacion = new javax.swing.JToggleButton();
        jlblBanner = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtbtnActivacion.setText("Activar");
        jtbtnActivacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbtnActivacionActionPerformed(evt);
            }
        });

        jlblBanner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlblBanner.setName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jtbtnActivacion, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jlblBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jlblBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jtbtnActivacion)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbtnActivacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbtnActivacionActionPerformed

        if (jtbtnActivacion.isSelected()) {
            jtbtnActivacion.setText("Desactivar");
            ActivarEnvios();
        } else {
            jtbtnActivacion.setText("Activar");
            DesactivarEnvios();
        }        
    }//GEN-LAST:event_jtbtnActivacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestSMSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestSMSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestSMSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestSMSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TestSMSView().setVisible(true);
            }
        });
    }
    
    private void ActivarEnvios(){
        
        int hilo=0;

        // Cargamos el ArrayList con un Bean por cada e-mail a enviar
        eb=CargaArrayEmailBean(eb);
        
        // Recorremos el ArrayList generando un hilo (Thread) por cada Bean
        Iterator it = eb.iterator();
        while(it.hasNext()){
            // Creamos el hilo
            EmailBean x = (EmailBean)it.next();
            em.add(new EnviarEmail(x));
            // Lo arrancamos
            em.get(hilo).start();
            hilo++;
        }
        
    }
    
    private void DesactivarEnvios(){
        
        int hilos=0;
        
        // Recorremos el ArrayList generando un hilo (Thread) por cada Bean
        hilos = em.size();
        for (int hilo=0; hilo<em.size(); hilo++){
            // paramos el hilo
            em.get(hilo).parar();
        }
        em.clear();
        eb.clear();
    }

    private static ArrayList<EmailBean> CargaArrayEmailBean(ArrayList<EmailBean> eb){
        
        EmailBean temp= new EmailBean();
        temp.id="1";
        temp.to="santiago.pastor@aviva.es";
        temp.from="santiago.pastor@aviva.es";
        temp.asunto="asunto1";
        temp.cuerpo="cuerpo1";
        temp.pausa=5000;
        
        eb.add(temp);

        temp= new EmailBean();
        temp.id="2";
        temp.to="santiago.pastor@aviva.es";
        temp.from="santiago.pastor@aviva.es";
        temp.asunto="asunto2";
        temp.cuerpo="cuerpo2";
        temp.pausa=8000;
        
        eb.add(temp);
        
        return eb;
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jlblBanner;
    private javax.swing.JToggleButton jtbtnActivacion;
    // End of variables declaration//GEN-END:variables
}
